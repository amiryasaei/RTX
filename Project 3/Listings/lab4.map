Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    led.o(i.LED_clear) refers to led.o(.constdata) for led_pos
    led.o(i.LED_display) refers to led.o(i.LED_set) for LED_set
    led.o(i.LED_display) refers to led.o(i.LED_clear) for LED_clear
    led.o(i.LED_set) refers to led.o(.constdata) for led_pos
    retarget.o(i._ttywrch) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fgetc) refers to retarget.o(i.getkey) for getkey
    retarget.o(i.fgetc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fputc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.getkey) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.getkey) refers to uart.o(i.UARTReceiveChar) for UARTReceiveChar
    retarget.o(i.getkey) refers to retarget.o(.data) for uart_init_called
    retarget.o(i.sendchar) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.sendchar) refers to uart.o(i.UARTSendChar) for UARTSendChar
    retarget.o(i.sendchar) refers to retarget.o(.data) for uart_init_called
    sensor_fusion.o(i.computeAngles) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.computeAngles) refers to fadd.o(.text) for __aeabi_frsub
    sensor_fusion.o(i.computeAngles) refers to atan2f.o(i.atan2f) for atan2f
    sensor_fusion.o(i.computeAngles) refers to asinf.o(i.asinf) for asinf
    sensor_fusion.o(i.computeAngles) refers to sensor_fusion.o(.data) for q2
    sensor_fusion.o(i.invSqrt) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.invSqrt) refers to fadd.o(.text) for __aeabi_frsub
    sensor_fusion.o(i.sensor_fusion_begin) refers to fdiv.o(.text) for __aeabi_fdiv
    sensor_fusion.o(i.sensor_fusion_begin) refers to sensor_fusion.o(.data) for invSampleFreq
    sensor_fusion.o(i.sensor_fusion_getPitch) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getPitch) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.sensor_fusion_getPitch) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_getPitchRadians) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getPitchRadians) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_getRoll) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getRoll) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.sensor_fusion_getRoll) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_getRollRadians) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getRollRadians) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_getYaw) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getYaw) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.sensor_fusion_getYaw) refers to fadd.o(.text) for __aeabi_fadd
    sensor_fusion.o(i.sensor_fusion_getYaw) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_getYawRadians) refers to sensor_fusion.o(i.computeAngles) for computeAngles
    sensor_fusion.o(i.sensor_fusion_getYawRadians) refers to sensor_fusion.o(.data) for anglesComputed
    sensor_fusion.o(i.sensor_fusion_init) refers to sensor_fusion.o(.data) for twoKp
    sensor_fusion.o(i.sensor_fusion_update) refers to cfcmple.o(.text) for __aeabi_cfcmpeq
    sensor_fusion.o(i.sensor_fusion_update) refers to sensor_fusion.o(i.sensor_fusion_updateIMU) for sensor_fusion_updateIMU
    sensor_fusion.o(i.sensor_fusion_update) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.sensor_fusion_update) refers to fadd.o(.text) for __aeabi_fadd
    sensor_fusion.o(i.sensor_fusion_update) refers to sensor_fusion.o(i.invSqrt) for invSqrt
    sensor_fusion.o(i.sensor_fusion_update) refers to sqrtf.o(i.sqrtf) for sqrtf
    sensor_fusion.o(i.sensor_fusion_update) refers to sensor_fusion.o(.data) for q0
    sensor_fusion.o(i.sensor_fusion_update) refers to cfrcmple.o(.text) for __aeabi_cfrcmple
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to fmul.o(.text) for __aeabi_fmul
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to cfcmple.o(.text) for __aeabi_cfcmpeq
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to fadd.o(.text) for __aeabi_fadd
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to sensor_fusion.o(i.invSqrt) for invSqrt
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to cfrcmple.o(.text) for __aeabi_cfrcmple
    sensor_fusion.o(i.sensor_fusion_updateIMU) refers to sensor_fusion.o(.data) for q2
    timer.o(i.timer_setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    uart.o(i.FreeRcv) refers to uart.o(i.Free) for Free
    uart.o(i.FreeRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.FreeSnd) refers to uart.o(i.Free) for Free
    uart.o(i.FreeSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.LockRcv) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.LockSnd) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.UART0_IRQHandler) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UART0_IRQHandler) refers to uart.o(.data) for UART0Count
    uart.o(i.UART1_IRQHandler) refers to uart.o(.bss) for UART1Buffer
    uart.o(i.UART1_IRQHandler) refers to uart.o(.data) for UART1Count
    uart.o(i.UARTInit) refers to uart.o(i.getFrequency) for getFrequency
    uart.o(i.UARTInit) refers to uart.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(i.UARTInit) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTInit) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTRecieve) refers to uart.o(i.LockRcv) for LockRcv
    uart.o(i.UARTRecieve) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTRecieve) refers to uart.o(.data) for UART0Count
    uart.o(i.UARTRecieve) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UARTSend) refers to uart.o(i.LockSnd) for LockSnd
    uart.o(i.UARTSend) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTSend) refers to uart.o(.data) for UART0TxEmpty
    uart.o(i.getFrequency) refers to system_lpc17xx.o(.data) for SystemCoreClock
    p2main.o(i.IMU) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    p2main.o(i.IMU) refers to mpu9250.o(i.MPU9250_read_gyro) for MPU9250_read_gyro
    p2main.o(i.IMU) refers to mpu9250.o(i.MPU9250_read_acc) for MPU9250_read_acc
    p2main.o(i.IMU) refers to mpu9250.o(i.MPU9250_read_mag) for MPU9250_read_mag
    p2main.o(i.IMU) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    p2main.o(i.IMU) refers to p2main.o(.data) for mutex1
    p2main.o(i.IMU) refers to mpu9250.o(.data) for MPU9250_st_value
    p2main.o(i.main) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    p2main.o(i.main) refers to mpu9250.o(i.MPU9250_init) for MPU9250_init
    p2main.o(i.main) refers to mpu9250.o(i.MPU9250_whoami) for MPU9250_whoami
    p2main.o(i.main) refers to sensor_fusion.o(i.sensor_fusion_init) for sensor_fusion_init
    p2main.o(i.main) refers to sensor_fusion.o(i.sensor_fusion_begin) for sensor_fusion_begin
    p2main.o(i.main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    p2main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    p2main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    p2main.o(i.main) refers to printfa.o(i.__0printf) for __2printf
    p2main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    p2main.o(i.main) refers to p2main.o(.constdata) for Thread_Mutex_attr
    p2main.o(i.main) refers to p2main.o(.data) for mutex1
    p2main.o(i.main) refers to p2main.o(i.IMU) for IMU
    p2main.o(i.main) refers to p2main.o(i.sensorFusionRead) for sensorFusionRead
    p2main.o(i.main) refers to p2main.o(i.print) for print
    p2main.o(i.print) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    p2main.o(i.print) refers to sensor_fusion.o(i.sensor_fusion_getRoll) for sensor_fusion_getRoll
    p2main.o(i.print) refers to f2d.o(.text) for __aeabi_f2d
    p2main.o(i.print) refers to sensor_fusion.o(i.sensor_fusion_getYaw) for sensor_fusion_getYaw
    p2main.o(i.print) refers to sensor_fusion.o(i.sensor_fusion_getPitch) for sensor_fusion_getPitch
    p2main.o(i.print) refers to printfa.o(i.__0printf) for __2printf
    p2main.o(i.print) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    p2main.o(i.print) refers to p2main.o(.data) for mutex1
    p2main.o(i.sensorFusionRead) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    p2main.o(i.sensorFusionRead) refers to sensor_fusion.o(i.sensor_fusion_update) for sensor_fusion_update
    p2main.o(i.sensorFusionRead) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    p2main.o(i.sensorFusionRead) refers to p2main.o(.data) for mutex1
    p2main.o(i.sensorFusionRead) refers to mpu9250.o(.bss) for MPU9250_mag_data
    p2main.o(.constdata) refers to p2main.o(.conststring) for .conststring
    mpu9250.o(i.DelayMilliseconds) refers to mpu9250.o(i.DelayOneMillisecond) for DelayOneMillisecond
    mpu9250.o(i.MPU9250_AK8963_whoami) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_AK8963_whoami) refers to mpu9250.o(i.DelayOneMillisecond) for DelayOneMillisecond
    mpu9250.o(i.MPU9250_ReadReg) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_ReadRegs) refers to ece_spi.o(i.SPI_select) for SPI_select
    mpu9250.o(i.MPU9250_ReadRegs) refers to ece_spi.o(i.SPI_xfer) for SPI_xfer
    mpu9250.o(i.MPU9250_ReadRegs) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    mpu9250.o(i.MPU9250_WriteReg) refers to ece_spi.o(i.SPI_select) for SPI_select
    mpu9250.o(i.MPU9250_WriteReg) refers to ece_spi.o(i.SPI_xfer) for SPI_xfer
    mpu9250.o(i.MPU9250_WriteReg) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    mpu9250.o(i.MPU9250_calib_acc) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_calib_acc) refers to mpu9250.o(i.MPU9250_set_acc_scale) for MPU9250_set_acc_scale
    mpu9250.o(i.MPU9250_calib_acc) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_calib_acc) refers to mpu9250.o(.bss) for calib_data
    mpu9250.o(i.MPU9250_calib_mag) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_calib_mag) refers to mpu9250.o(i.DelayMilliseconds) for DelayMilliseconds
    mpu9250.o(i.MPU9250_calib_mag) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_calib_mag) refers to ffltui.o(.text) for __aeabi_ui2f
    mpu9250.o(i.MPU9250_calib_mag) refers to fadd.o(.text) for __aeabi_fsub
    mpu9250.o(i.MPU9250_calib_mag) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_calib_mag) refers to fmul.o(.text) for __aeabi_fmul
    mpu9250.o(i.MPU9250_calib_mag) refers to mpu9250.o(.bss) for Magnetometer_ASA
    mpu9250.o(i.MPU9250_calibrate) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_calibrate) refers to mpu9250.o(i.DelayMilliseconds) for DelayMilliseconds
    mpu9250.o(i.MPU9250_calibrate) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_calibrate) refers to ffltui.o(.text) for __aeabi_ui2f
    mpu9250.o(i.MPU9250_calibrate) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_calibrate) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_get_CNTL1) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_init) refers to memcpya.o(.text) for __aeabi_memcpy4
    mpu9250.o(i.MPU9250_init) refers to ece_spi.o(i.SPI_setup) for SPI_setup
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(i.MPU9250_calibrate) for MPU9250_calibrate
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(i.DelayMilliseconds) for DelayMilliseconds
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(i.MPU9250_set_acc_scale) for MPU9250_set_acc_scale
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(i.MPU9250_set_gyro_scale) for MPU9250_set_gyro_scale
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(.constdata) for .constdata
    mpu9250.o(i.MPU9250_init) refers to mpu9250.o(.bss) for a_bias
    mpu9250.o(i.MPU9250_read_acc) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_read_acc) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_read_acc) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_read_acc) refers to fadd.o(.text) for __aeabi_fsub
    mpu9250.o(i.MPU9250_read_acc) refers to mpu9250.o(.data) for acc_divider
    mpu9250.o(i.MPU9250_read_acc) refers to mpu9250.o(.bss) for a_bias
    mpu9250.o(i.MPU9250_read_all) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_read_all) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_read_all) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_read_all) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_read_all) refers to fadd.o(.text) for __aeabi_fsub
    mpu9250.o(i.MPU9250_read_all) refers to f2d.o(.text) for __aeabi_f2d
    mpu9250.o(i.MPU9250_read_all) refers to ddiv.o(.text) for __aeabi_ddiv
    mpu9250.o(i.MPU9250_read_all) refers to dadd.o(.text) for __aeabi_dadd
    mpu9250.o(i.MPU9250_read_all) refers to d2f.o(.text) for __aeabi_d2f
    mpu9250.o(i.MPU9250_read_all) refers to fmul.o(.text) for __aeabi_fmul
    mpu9250.o(i.MPU9250_read_all) refers to mpu9250.o(.data) for acc_divider
    mpu9250.o(i.MPU9250_read_all) refers to mpu9250.o(.bss) for a_bias
    mpu9250.o(i.MPU9250_read_gyro) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_read_gyro) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_read_gyro) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_read_gyro) refers to fadd.o(.text) for __aeabi_fsub
    mpu9250.o(i.MPU9250_read_gyro) refers to mpu9250.o(.data) for gyro_divider
    mpu9250.o(i.MPU9250_read_gyro) refers to mpu9250.o(.bss) for g_bias
    mpu9250.o(i.MPU9250_read_mag) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_read_mag) refers to mpu9250.o(i.DelayMilliseconds) for DelayMilliseconds
    mpu9250.o(i.MPU9250_read_mag) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_read_mag) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_read_mag) refers to fmul.o(.text) for __aeabi_fmul
    mpu9250.o(i.MPU9250_read_mag) refers to mpu9250.o(.data) for mag_data_raw
    mpu9250.o(i.MPU9250_read_mag) refers to mpu9250.o(.bss) for Magnetometer_ASA
    mpu9250.o(i.MPU9250_read_temp) refers to mpu9250.o(i.MPU9250_ReadRegs) for MPU9250_ReadRegs
    mpu9250.o(i.MPU9250_read_temp) refers to fflti.o(.text) for __aeabi_i2f
    mpu9250.o(i.MPU9250_read_temp) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu9250.o(i.MPU9250_read_temp) refers to f2d.o(.text) for __aeabi_f2d
    mpu9250.o(i.MPU9250_read_temp) refers to dadd.o(.text) for __aeabi_dadd
    mpu9250.o(i.MPU9250_read_temp) refers to d2f.o(.text) for __aeabi_d2f
    mpu9250.o(i.MPU9250_read_temp) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    mpu9250.o(i.MPU9250_read_temp) refers to mpu9250.o(.data) for MPU9250_temperature
    mpu9250.o(i.MPU9250_set_acc_scale) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_set_acc_scale) refers to mpu9250.o(.data) for acc_divider
    mpu9250.o(i.MPU9250_set_gyro_scale) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    mpu9250.o(i.MPU9250_set_gyro_scale) refers to mpu9250.o(.data) for gyro_divider
    mpu9250.o(i.MPU9250_whoami) refers to mpu9250.o(i.MPU9250_WriteReg) for MPU9250_WriteReg
    ece_spi.o(i.SPI_readBytes) refers to ece_spi.o(i.SPI_select) for SPI_select
    ece_spi.o(i.SPI_readBytes) refers to ece_spi.o(i.SPI_xfer) for SPI_xfer
    ece_spi.o(i.SPI_readBytes) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    ece_spi.o(i.SPI_readRegister) refers to ece_spi.o(i.SPI_select) for SPI_select
    ece_spi.o(i.SPI_readRegister) refers to ece_spi.o(i.SPI_xfer) for SPI_xfer
    ece_spi.o(i.SPI_readRegister) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    ece_spi.o(i.SPI_writeRegister) refers to ece_spi.o(i.SPI_select) for SPI_select
    ece_spi.o(i.SPI_writeRegister) refers to ece_spi.o(i.SPI_xfer) for SPI_xfer
    ece_spi.o(i.SPI_writeRegister) refers to ece_spi.o(i.SPI_deselect) for SPI_deselect
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.idle.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.timer.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.constdata) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(STACK) for __initial_sp
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(.text) for Reset_Handler
    startup_lpc17xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lpc17xx.o(.text) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    startup_lpc17xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to uldiv.o(.text) for __aeabi_uldivmod
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to system_lpc17xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    asinf.o(i.__softfp_asinf) refers (Special) to iusefp.o(.text) for __I$use$fp
    asinf.o(i.__softfp_asinf) refers to asinf.o(i.asinf) for asinf
    asinf.o(i.asinf) refers (Special) to iusefp.o(.text) for __I$use$fp
    asinf.o(i.asinf) refers to fadd.o(.text) for __aeabi_frsub
    asinf.o(i.asinf) refers to fscalb.o(.text) for __ARM_scalbnf
    asinf.o(i.asinf) refers to sqrtf.o(i.sqrtf) for sqrtf
    asinf.o(i.asinf) refers to fmul.o(.text) for __aeabi_fmul
    asinf.o(i.asinf) refers to fpclassifyf.o(i.__ARM_fpclassifyf) for __ARM_fpclassifyf
    asinf.o(i.asinf) refers to funder.o(i.__mathlib_flt_underflow) for __mathlib_flt_underflow
    asinf.o(i.asinf) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    asinf.o(i.asinf) refers to errno.o(i.__set_errno) for __set_errno
    asinf.o(i.asinf) refers to funder.o(i.__mathlib_flt_invalid) for __mathlib_flt_invalid
    asinf_x.o(i.____softfp_asinf$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    asinf_x.o(i.____softfp_asinf$lsc) refers to asinf_x.o(i.__asinf$lsc) for __asinf$lsc
    asinf_x.o(i.__asinf$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    asinf_x.o(i.__asinf$lsc) refers to fadd.o(.text) for __aeabi_frsub
    asinf_x.o(i.__asinf$lsc) refers to fscalb.o(.text) for __ARM_scalbnf
    asinf_x.o(i.__asinf$lsc) refers to sqrtf.o(i.sqrtf) for sqrtf
    asinf_x.o(i.__asinf$lsc) refers to fmul.o(.text) for __aeabi_fmul
    asinf_x.o(i.__asinf$lsc) refers to funder.o(i.__mathlib_flt_infnan) for __mathlib_flt_infnan
    asinf_x.o(i.__asinf$lsc) refers to errno.o(i.__set_errno) for __set_errno
    atan2f.o(i.__softfp_atan2f) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2f.o(i.__softfp_atan2f) refers to atan2f.o(i.atan2f) for atan2f
    atan2f.o(i.atan2f) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2f.o(i.atan2f) refers to fdiv.o(.text) for __aeabi_fdiv
    atan2f.o(i.atan2f) refers to fpclassifyf.o(i.__ARM_fpclassifyf) for __ARM_fpclassifyf
    atan2f.o(i.atan2f) refers to funder.o(i.__mathlib_flt_underflow) for __mathlib_flt_underflow
    atan2f.o(i.atan2f) refers to fadd.o(.text) for __aeabi_fsub
    atan2f.o(i.atan2f) refers to fmul.o(.text) for __aeabi_fmul
    atan2f.o(i.atan2f) refers to funder.o(i.__mathlib_flt_infnan2) for __mathlib_flt_infnan2
    atan2f_x.o(i.____softfp_atan2f$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2f_x.o(i.____softfp_atan2f$lsc) refers to atan2f_x.o(i.__atan2f$lsc) for __atan2f$lsc
    atan2f_x.o(i.__atan2f$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2f_x.o(i.__atan2f$lsc) refers to fdiv.o(.text) for __aeabi_fdiv
    atan2f_x.o(i.__atan2f$lsc) refers to fadd.o(.text) for __aeabi_fsub
    atan2f_x.o(i.__atan2f$lsc) refers to fmul.o(.text) for __aeabi_fmul
    atan2f_x.o(i.__atan2f$lsc) refers to funder.o(i.__mathlib_flt_infnan2) for __mathlib_flt_infnan2
    atan2f_x.o(i.__atan2f$lsc) refers to errno.o(i.__set_errno) for __set_errno
    sqrtf.o(i.__softfp_sqrtf) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrtf.o(i.__softfp_sqrtf) refers to fsqrt.o(.text) for _fsqrt
    sqrtf.o(i.__softfp_sqrtf) refers to errno.o(i.__set_errno) for __set_errno
    sqrtf.o(i.sqrtf) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrtf.o(i.sqrtf) refers to fsqrt.o(.text) for _fsqrt
    sqrtf.o(i.sqrtf) refers to errno.o(i.__set_errno) for __set_errno
    sqrtf_x.o(i.____softfp_sqrtf$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrtf_x.o(i.____softfp_sqrtf$lsc) refers to errno.o(i.__set_errno) for __set_errno
    sqrtf_x.o(i.____softfp_sqrtf$lsc) refers to fsqrt.o(.text) for _fsqrt
    sqrtf_x.o(i.__sqrtf$lsc) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrtf_x.o(i.__sqrtf$lsc) refers to errno.o(i.__set_errno) for __set_errno
    sqrtf_x.o(i.__sqrtf$lsc) refers to fsqrt.o(.text) for _fsqrt
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    cfcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cfrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fpclassifyf.o(i.__ARM_fpclassifyf) refers (Special) to iusefp.o(.text) for __I$use$fp
    funder.o(i.__mathlib_flt_divzero) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_infnan) refers to fscalb.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_infnan2) refers to fadd.o(.text) for __aeabi_fadd
    funder.o(i.__mathlib_flt_invalid) refers to fdiv.o(.text) for __aeabi_fdiv
    funder.o(i.__mathlib_flt_overflow) refers to fscalb.o(.text) for __ARM_scalbnf
    funder.o(i.__mathlib_flt_posinfnan) refers to fmul.o(.text) for __aeabi_fmul
    funder.o(i.__mathlib_flt_underflow) refers to fscalb.o(.text) for __ARM_scalbnf
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lpc17xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lpc17xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to p2main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to p2main.o(i.main) for main
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    fsqrt.o(.text) refers to fepilogue.o(.text) for _float_round
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing led.o(.rev16_text), (4 bytes).
    Removing led.o(.revsh_text), (4 bytes).
    Removing led.o(.rrx_text), (6 bytes).
    Removing led.o(i.LED_clear), (36 bytes).
    Removing led.o(i.LED_display), (38 bytes).
    Removing led.o(i.LED_set), (36 bytes).
    Removing led.o(i.LED_setup), (40 bytes).
    Removing led.o(.constdata), (8 bytes).
    Removing retarget.o(i._sys_exit), (4 bytes).
    Removing retarget.o(i._ttywrch), (12 bytes).
    Removing retarget.o(i.ferror), (8 bytes).
    Removing retarget.o(i.fgetc), (20 bytes).
    Removing retarget.o(i.getkey), (36 bytes).
    Removing sensor_fusion.o(i.sensor_fusion_getPitchRadians), (28 bytes).
    Removing sensor_fusion.o(i.sensor_fusion_getRollRadians), (28 bytes).
    Removing sensor_fusion.o(i.sensor_fusion_getYawRadians), (28 bytes).
    Removing timer.o(.rev16_text), (4 bytes).
    Removing timer.o(.revsh_text), (4 bytes).
    Removing timer.o(.rrx_text), (6 bytes).
    Removing timer.o(i.timer_read), (8 bytes).
    Removing timer.o(i.timer_setup), (56 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.rrx_text), (6 bytes).
    Removing uart.o(i.Lock), (28 bytes).
    Removing uart.o(i.LockRcv), (36 bytes).
    Removing uart.o(i.LockSnd), (36 bytes).
    Removing uart.o(i.UARTReceiveChar), (36 bytes).
    Removing uart.o(i.UARTRecieve), (160 bytes).
    Removing uart.o(i.UARTSend), (132 bytes).
    Removing p2main.o(.rev16_text), (4 bytes).
    Removing p2main.o(.revsh_text), (4 bytes).
    Removing p2main.o(.rrx_text), (6 bytes).
    Removing mpu9250.o(i.MPU9250_AK8963_whoami), (48 bytes).
    Removing mpu9250.o(i.MPU9250_ReadReg), (18 bytes).
    Removing mpu9250.o(i.MPU9250_calib_acc), (120 bytes).
    Removing mpu9250.o(i.MPU9250_calib_mag), (184 bytes).
    Removing mpu9250.o(i.MPU9250_get_CNTL1), (38 bytes).
    Removing mpu9250.o(i.MPU9250_read_all), (416 bytes).
    Removing mpu9250.o(i.MPU9250_read_temp), (96 bytes).
    Removing ece_spi.o(.rev16_text), (4 bytes).
    Removing ece_spi.o(.revsh_text), (4 bytes).
    Removing ece_spi.o(.rrx_text), (6 bytes).
    Removing ece_spi.o(i.SPI_readBytes), (44 bytes).
    Removing ece_spi.o(i.SPI_readRegister), (32 bytes).
    Removing ece_spi.o(i.SPI_writeRegister), (28 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing startup_lpc17xx.o(HEAP), (8192 bytes).
    Removing system_lpc17xx.o(.rev16_text), (4 bytes).
    Removing system_lpc17xx.o(.revsh_text), (4 bytes).
    Removing system_lpc17xx.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(i.SystemCoreClockUpdate), (424 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_0), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (176 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (168 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing d2f.o(.text), (56 bytes).

387 unused section(s) (total 17950 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      204  startup_lpc17xx.o(RESET)
    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpscalb.c              0x00000000   Number         0  fscalb.o ABSOLUTE
    ../fplib/microlib/fpsqrt.c               0x00000000   Number         0  fsqrt.o ABSOLUTE
    ../mathlib/asinf.c                       0x00000000   Number         0  asinf_x.o ABSOLUTE
    ../mathlib/asinf.c                       0x00000000   Number         0  asinf.o ABSOLUTE
    ../mathlib/atan2f.c                      0x00000000   Number         0  atan2f.o ABSOLUTE
    ../mathlib/atan2f.c                      0x00000000   Number         0  atan2f_x.o ABSOLUTE
    ../mathlib/fpclassifyf.c                 0x00000000   Number         0  fpclassifyf.o ABSOLUTE
    ../mathlib/funder.c                      0x00000000   Number         0  funder.o ABSOLUTE
    ../mathlib/sqrtf.c                       0x00000000   Number         0  sqrtf_x.o ABSOLUTE
    ../mathlib/sqrtf.c                       0x00000000   Number         0  sqrtf.o ABSOLUTE
    C:\Software\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Software\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.8.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    MPU9250.c                                0x00000000   Number         0  mpu9250.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\LPC1768\startup_LPC17xx.s     0x00000000   Number         0  startup_lpc17xx.o ABSOLUTE
    RTE\Device\LPC1768\system_LPC17xx.c      0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\LPC1768\\system_LPC17xx.c   0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    Retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    SRC\Project3\ece_spi.c                   0x00000000   Number         0  ece_spi.o ABSOLUTE
    SRC\\Project3\\ece_spi.c                 0x00000000   Number         0  ece_spi.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    cfcmple.s                                0x00000000   Number         0  cfcmple.o ABSOLUTE
    cfrcmple.s                               0x00000000   Number         0  cfrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    p2main.c                                 0x00000000   Number         0  p2main.o ABSOLUTE
    p2main.c                                 0x00000000   Number         0  p2main.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    sensor_fusion.c                          0x00000000   Number         0  sensor_fusion.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000cc   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000cc   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000d0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000d4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000d4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000d4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000dc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000dc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000dc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000dc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000e0   Section       36  startup_lpc17xx.o(.text)
    [Anonymous Symbol]                       0x00000104   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x0000012c   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x0000013c   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x00000144   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x00000152   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x00000154   Number         0  irq_armv7m.o(.text)
    .text                                    0x00000198   Section        0  uldiv.o(.text)
    .text                                    0x000001fa   Section        0  memcpya.o(.text)
    .text                                    0x0000021e   Section        0  memseta.o(.text)
    .text                                    0x00000242   Section        0  fadd.o(.text)
    .text                                    0x000002f2   Section        0  ffltui.o(.text)
    .ARM.__at_0x02FC                         0x000002fc   Section        4  startup_lpc17xx.o(.ARM.__at_0x02FC)
    .text                                    0x00000300   Section        0  fmul.o(.text)
    .text                                    0x00000364   Section        0  fdiv.o(.text)
    .text                                    0x000003e0   Section        0  dadd.o(.text)
    .text                                    0x0000052e   Section        0  ddiv.o(.text)
    .text                                    0x0000060c   Section        0  fflti.o(.text)
    .text                                    0x0000061e   Section        0  f2d.o(.text)
    .text                                    0x00000644   Section       20  cfcmple.o(.text)
    .text                                    0x00000658   Section       20  cfrcmple.o(.text)
    .text                                    0x0000066c   Section        0  uidiv.o(.text)
    .text                                    0x00000698   Section        0  llshl.o(.text)
    .text                                    0x000006b6   Section        0  llushr.o(.text)
    .text                                    0x000006d6   Section        0  llsshr.o(.text)
    .text                                    0x000006fa   Section        0  iusefp.o(.text)
    .text                                    0x000006fa   Section        0  fepilogue.o(.text)
    .text                                    0x00000768   Section        0  fscalb.o(.text)
    .text                                    0x00000780   Section        0  fsqrt.o(.text)
    .text                                    0x000007de   Section        0  depilogue.o(.text)
    .text                                    0x00000898   Section        0  dmul.o(.text)
    .text                                    0x0000097c   Section        0  dfixul.o(.text)
    .text                                    0x000009ac   Section       48  cdrcmple.o(.text)
    .text                                    0x000009dc   Section       36  init.o(.text)
    .text                                    0x00000a00   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x00000a3a   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x00000a3b   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000a7a   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000a7b   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000ad2   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00000ad3   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000af0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00000af8   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00000afc   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x00000b1c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000b20   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00000b24   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000b28   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x00000b30   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00000b60   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000b64   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000b68   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000b6c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00000b70   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x00000b71   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00000b7c   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x00000b7d   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00000b88   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x00000b89   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00000b8e   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x00000b8f   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000bf4   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00000bf5   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    __arm_cp.9_0                             0x00000c38   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00000c3c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x00000c64   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000c68   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x00000c88   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000c8c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x00000cf8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000cfc   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x00000d78   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000d7c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x00000d9c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000da0   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x00000dc0   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00000dc4   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x00000de4   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00000de8   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x00000dec   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x00000dee   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00000e5a   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000e9c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000ed2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000f0c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000f56   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000f8e   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000f8f   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00001038   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x00001058   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_1                             0x0000105c   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x00001060   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x000010a8   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x000010ec   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00001174   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001178   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x000011e4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x000011e8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x000011ec   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x000011ed   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00001220   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001224   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00001225   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x000012a0   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x000012a4   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x000012a5   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x000012e0   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x000012e4   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x0000132c   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00001330   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDestroy                       0x00001331   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    __arm_cp.56_0                            0x00001350   Number         4  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00001354   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x000013a4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x000013a8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x000013a9   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x000013fc   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001400   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadJoinWakeup                    0x00001401   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x0000141e   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001430   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000145c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001470   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    osRtxThreadListRoot                      0x00001471   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0000147c   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x000014a2   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x000014a3   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000014cc   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x000014dc   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000014e0   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x000014e8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x00001518   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x0000151c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x00001520   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001524   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x00001530   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001534   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x0000156c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001570   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001594   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001608   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0000160c   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x00001624   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x00001628   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x0000162c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x0000164c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x0000164d   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000016b8   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000016bc   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x000016c4   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x000016c8   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x000016e8   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x000016ec   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x000016ed   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x000017e0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x000017e4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x000017e8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000017ec   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x000017ed   Thumb Code   120  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_0                            0x00001864   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x00001868   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x0000186c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x00001870   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00001874   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x00001875   Thumb Code   212  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x00001948   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0000194c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x0000194d   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x00001a5c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x00001a60   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001a64   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001a65   Thumb Code   176  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x00001b14   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00001b18   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00001b19   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x00001ba4   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001ba8   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00001ba9   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x00001c0c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00001c10   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001c11   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x00001cc0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001cc4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001cc5   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001d0c   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00001d10   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00001d11   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00001ee8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x00001eec   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00001ef0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00001ef4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00001ef8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.DelayMilliseconds                      0x00001efc   Section        0  mpu9250.o(i.DelayMilliseconds)
    DelayMilliseconds                        0x00001efd   Thumb Code    20  mpu9250.o(i.DelayMilliseconds)
    i.DelayOneMillisecond                    0x00001f10   Section        0  mpu9250.o(i.DelayOneMillisecond)
    DelayOneMillisecond                      0x00001f11   Thumb Code    16  mpu9250.o(i.DelayOneMillisecond)
    i.Free                                   0x00001f20   Section        0  uart.o(i.Free)
    i.FreeRcv                                0x00001f28   Section        0  uart.o(i.FreeRcv)
    i.FreeSnd                                0x00001f4c   Section        0  uart.o(i.FreeSnd)
    i.IMU                                    0x00001f70   Section        0  p2main.o(i.IMU)
    i.MPU9250_ReadRegs                       0x00001fa8   Section        0  mpu9250.o(i.MPU9250_ReadRegs)
    i.MPU9250_WriteReg                       0x00001fda   Section        0  mpu9250.o(i.MPU9250_WriteReg)
    i.MPU9250_calibrate                      0x00001ffa   Section        0  mpu9250.o(i.MPU9250_calibrate)
    i.MPU9250_init                           0x00002454   Section        0  mpu9250.o(i.MPU9250_init)
    i.MPU9250_read_acc                       0x000024d0   Section        0  mpu9250.o(i.MPU9250_read_acc)
    i.MPU9250_read_gyro                      0x00002534   Section        0  mpu9250.o(i.MPU9250_read_gyro)
    i.MPU9250_read_mag                       0x00002598   Section        0  mpu9250.o(i.MPU9250_read_mag)
    i.MPU9250_set_acc_scale                  0x00002628   Section        0  mpu9250.o(i.MPU9250_set_acc_scale)
    i.MPU9250_set_gyro_scale                 0x000026a4   Section        0  mpu9250.o(i.MPU9250_set_gyro_scale)
    i.MPU9250_whoami                         0x0000272c   Section        0  mpu9250.o(i.MPU9250_whoami)
    i.SPI_deselect                           0x0000273c   Section        0  ece_spi.o(i.SPI_deselect)
    i.SPI_select                             0x0000274c   Section        0  ece_spi.o(i.SPI_select)
    i.SPI_setup                              0x0000275c   Section        0  ece_spi.o(i.SPI_setup)
    i.SPI_xfer                               0x000027c4   Section        0  ece_spi.o(i.SPI_xfer)
    i.SystemInit                             0x000027e4   Section        0  system_lpc17xx.o(i.SystemInit)
    i.UART0_IRQHandler                       0x00002924   Section        0  uart.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x0000298c   Section        0  uart.o(i.UART1_IRQHandler)
    i.UARTInit                               0x000029fc   Section        0  uart.o(i.UARTInit)
    i.UARTSendChar                           0x00002ab8   Section        0  uart.o(i.UARTSendChar)
    i.__0printf                              0x00002adc   Section        0  printfa.o(i.__0printf)
    i.__ARM_fpclassifyf                      0x00002afc   Section        0  fpclassifyf.o(i.__ARM_fpclassifyf)
    i.__NVIC_EnableIRQ                       0x00002b22   Section        0  uart.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002b23   Thumb Code    34  uart.o(i.__NVIC_EnableIRQ)
    i.__mathlib_flt_infnan                   0x00002b44   Section        0  funder.o(i.__mathlib_flt_infnan)
    i.__mathlib_flt_infnan2                  0x00002b4a   Section        0  funder.o(i.__mathlib_flt_infnan2)
    i.__mathlib_flt_invalid                  0x00002b4e   Section        0  funder.o(i.__mathlib_flt_invalid)
    i.__mathlib_flt_underflow                0x00002b56   Section        0  funder.o(i.__mathlib_flt_underflow)
    i.__scatterload_copy                     0x00002b60   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002b6e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002b70   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.__set_errno                            0x00002b80   Section        0  errno.o(i.__set_errno)
    i._fp_digits                             0x00002b8c   Section        0  printfa.o(i._fp_digits)
    _fp_digits                               0x00002b8d   Thumb Code   366  printfa.o(i._fp_digits)
    i._printf_core                           0x00002d10   Section        0  printfa.o(i._printf_core)
    _printf_core                             0x00002d11   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_post_padding                   0x000033ec   Section        0  printfa.o(i._printf_post_padding)
    _printf_post_padding                     0x000033ed   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00003410   Section        0  printfa.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00003411   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i.asinf                                  0x00003440   Section        0  asinf.o(i.asinf)
    i.atan2f                                 0x00003564   Section        0  atan2f.o(i.atan2f)
    i.computeAngles                          0x000037c0   Section        0  sensor_fusion.o(i.computeAngles)
    i.fputc                                  0x000038d4   Section        0  retarget.o(i.fputc)
    i.getFrequency                           0x000038e4   Section        0  uart.o(i.getFrequency)
    i.invSqrt                                0x0000392c   Section        0  sensor_fusion.o(i.invSqrt)
    i.main                                   0x0000399c   Section        0  p2main.o(i.main)
    i.osRtxErrorNotify                       0x00003b14   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x00003b34   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.print                                  0x00003b38   Section        0  p2main.o(i.print)
    i.sendchar                               0x00003ba0   Section        0  retarget.o(i.sendchar)
    i.sensorFusionRead                       0x00003be4   Section        0  p2main.o(i.sensorFusionRead)
    i.sensor_fusion_begin                    0x00003c3c   Section        0  sensor_fusion.o(i.sensor_fusion_begin)
    i.sensor_fusion_getPitch                 0x00003c54   Section        0  sensor_fusion.o(i.sensor_fusion_getPitch)
    i.sensor_fusion_getRoll                  0x00003c78   Section        0  sensor_fusion.o(i.sensor_fusion_getRoll)
    i.sensor_fusion_getYaw                   0x00003c9c   Section        0  sensor_fusion.o(i.sensor_fusion_getYaw)
    i.sensor_fusion_init                     0x00003ccc   Section        0  sensor_fusion.o(i.sensor_fusion_init)
    i.sensor_fusion_update                   0x00003d38   Section        0  sensor_fusion.o(i.sensor_fusion_update)
    i.sensor_fusion_updateIMU                0x00004498   Section        0  sensor_fusion.o(i.sensor_fusion_updateIMU)
    i.sqrtf                                  0x00004900   Section        0  sqrtf.o(i.sqrtf)
    .constdata                               0x0000492c   Section       16  p2main.o(.constdata)
    .constdata                               0x0000493c   Section       34  mpu9250.o(.constdata)
    .constdata                               0x00004960   Section      104  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00004960   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00004984   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x000049a8   Data          24  rtx_lib.o(.constdata)
    .conststring                             0x000049c8   Section       14  p2main.o(.conststring)
    .rodata                                  0x000049d8   Section      168  rtx_lib.o(.rodata)
    __tagsym$$used                           0x000049d8   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00004a48   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00004a84   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x10000000   Section     8256  rtx_lib.o(.bss.os)
    os_mem                                   0x10000000   Data        8192  rtx_lib.o(.bss.os)
    os_isr_queue                             0x10002000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x10002040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x10002040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x10002074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x10002074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x100020c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x100020c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x10002108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.idle.stack                0x10002150   Section      512  rtx_lib.o(.bss.os.thread.idle.stack)
    os_idle_thread_stack                     0x10002150   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    .bss.os.thread.timer.stack               0x10002350   Section      512  rtx_lib.o(.bss.os.thread.timer.stack)
    os_timer_thread_stack                    0x10002350   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    .data                                    0x10002550   Section       12  retarget.o(.data)
    .data                                    0x1000255c   Section       53  sensor_fusion.o(.data)
    .data                                    0x10002594   Section       32  uart.o(.data)
    .data                                    0x100025b4   Section        4  p2main.o(.data)
    .data                                    0x100025b8   Section       20  mpu9250.o(.data)
    .data                                    0x100025cc   Section        4  system_lpc17xx.o(.data)
    .data                                    0x100025d0   Section        4  errno.o(.data)
    _errno                                   0x100025d0   Data           4  errno.o(.data)
    .bss                                     0x10002678   Section      128  uart.o(.bss)
    .bss                                     0x100026f8   Section       84  mpu9250.o(.bss)
    [Anonymous Symbol]                       0x1000274c   Section        0  os_systick.o(.bss.os)
    PendST                                   0x1000274c   Data           1  os_systick.o(.bss.os)
    STACK                                    0x10002750   Section     8192  startup_lpc17xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  p2main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lpc17xx.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000cd   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000cd   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000d1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000d5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000d5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000d5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000d5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000dd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000dd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000e1   Thumb Code     8  startup_lpc17xx.o(.text)
    NMI_Handler                              0x000000e9   Thumb Code     2  startup_lpc17xx.o(.text)
    HardFault_Handler                        0x000000eb   Thumb Code     2  startup_lpc17xx.o(.text)
    MemManage_Handler                        0x000000ed   Thumb Code     2  startup_lpc17xx.o(.text)
    BusFault_Handler                         0x000000ef   Thumb Code     2  startup_lpc17xx.o(.text)
    UsageFault_Handler                       0x000000f1   Thumb Code     2  startup_lpc17xx.o(.text)
    DebugMon_Handler                         0x000000f5   Thumb Code     2  startup_lpc17xx.o(.text)
    ADC_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    BOD_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    CANActivity_IRQHandler                   0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    CAN_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    DMA_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT0_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT1_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT2_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT3_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    ENET_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C2_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2S_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    MCPWM_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PWM1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    QEI_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    RIT_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    RTC_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SPI_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER0_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER1_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER2_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER3_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    UART2_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    UART3_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    USBActivity_IRQHandler                   0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    USB_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    WDT_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SVC_Handler                              0x00000105   Thumb Code   108  irq_armv7m.o(.text)
    PendSV_Handler                           0x00000171   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x00000181   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x00000199   Thumb Code    98  uldiv.o(.text)
    __aeabi_memcpy                           0x000001fb   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001fb   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001fb   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0000021f   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0000021f   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000021f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000022d   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000022d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000022d   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000231   Thumb Code    18  memseta.o(.text)
    __aeabi_fadd                             0x00000243   Thumb Code   164  fadd.o(.text)
    __aeabi_fsub                             0x000002e7   Thumb Code     6  fadd.o(.text)
    __aeabi_frsub                            0x000002ed   Thumb Code     6  fadd.o(.text)
    __aeabi_ui2f                             0x000002f3   Thumb Code    10  ffltui.o(.text)
    __aeabi_fmul                             0x00000301   Thumb Code   100  fmul.o(.text)
    __aeabi_fdiv                             0x00000365   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x000003e1   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x00000523   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x00000529   Thumb Code     6  dadd.o(.text)
    __aeabi_ddiv                             0x0000052f   Thumb Code   222  ddiv.o(.text)
    __aeabi_i2f                              0x0000060d   Thumb Code    18  fflti.o(.text)
    __aeabi_f2d                              0x0000061f   Thumb Code    38  f2d.o(.text)
    __aeabi_cfcmpeq                          0x00000645   Thumb Code     0  cfcmple.o(.text)
    __aeabi_cfcmple                          0x00000645   Thumb Code    20  cfcmple.o(.text)
    __aeabi_cfrcmple                         0x00000659   Thumb Code    20  cfrcmple.o(.text)
    __aeabi_uidiv                            0x0000066d   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0000066d   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsl                             0x00000699   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000699   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000006b7   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000006b7   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000006d7   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000006d7   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x000006fb   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000006fb   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x0000070d   Thumb Code    92  fepilogue.o(.text)
    __ARM_scalbnf                            0x00000769   Thumb Code    24  fscalb.o(.text)
    scalbnf                                  0x00000769   Thumb Code     0  fscalb.o(.text)
    _fsqrt                                   0x00000781   Thumb Code    94  fsqrt.o(.text)
    _double_round                            0x000007df   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x000007fd   Thumb Code   156  depilogue.o(.text)
    __aeabi_dmul                             0x00000899   Thumb Code   228  dmul.o(.text)
    __aeabi_d2ulz                            0x0000097d   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x000009ad   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x000009dd   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000009dd   Thumb Code     0  init.o(.text)
    __decompress                             0x00000a01   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x00000a01   Thumb Code    58  __dczerorl.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x00000af1   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00000afd   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00000b29   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x00000b31   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    osKernelInitialize                       0x00000c3d   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000c69   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000c8d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x00000cfd   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000d7d   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexNew                               0x00000da1   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00000dc5   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelErrorNotify                   0x00000de9   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x00000ded   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x00000def   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00000e5b   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000e9d   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000ed3   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000f0d   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000f57   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x00001039   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x00001061   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x000010a9   Thumb Code    66  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x000010ed   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001179   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x000012e5   Thumb Code    72  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001355   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0000141f   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001431   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000145d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0000147d   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000014cd   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000014e1   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x000014e9   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001525   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001535   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001571   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001595   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x0000160d   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x0000162d   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x000016bd   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x000016c9   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    Free                                     0x00001f21   Thumb Code     6  uart.o(i.Free)
    FreeRcv                                  0x00001f29   Thumb Code    28  uart.o(i.FreeRcv)
    FreeSnd                                  0x00001f4d   Thumb Code    28  uart.o(i.FreeSnd)
    IMU                                      0x00001f71   Thumb Code    46  p2main.o(i.IMU)
    MPU9250_ReadRegs                         0x00001fa9   Thumb Code    50  mpu9250.o(i.MPU9250_ReadRegs)
    MPU9250_WriteReg                         0x00001fdb   Thumb Code    32  mpu9250.o(i.MPU9250_WriteReg)
    MPU9250_calibrate                        0x00001ffb   Thumb Code  1114  mpu9250.o(i.MPU9250_calibrate)
    MPU9250_init                             0x00002455   Thumb Code   112  mpu9250.o(i.MPU9250_init)
    MPU9250_read_acc                         0x000024d1   Thumb Code    86  mpu9250.o(i.MPU9250_read_acc)
    MPU9250_read_gyro                        0x00002535   Thumb Code    86  mpu9250.o(i.MPU9250_read_gyro)
    MPU9250_read_mag                         0x00002599   Thumb Code   128  mpu9250.o(i.MPU9250_read_mag)
    MPU9250_set_acc_scale                    0x00002629   Thumb Code   118  mpu9250.o(i.MPU9250_set_acc_scale)
    MPU9250_set_gyro_scale                   0x000026a5   Thumb Code   116  mpu9250.o(i.MPU9250_set_gyro_scale)
    MPU9250_whoami                           0x0000272d   Thumb Code    16  mpu9250.o(i.MPU9250_whoami)
    SPI_deselect                             0x0000273d   Thumb Code    10  ece_spi.o(i.SPI_deselect)
    SPI_select                               0x0000274d   Thumb Code    10  ece_spi.o(i.SPI_select)
    SPI_setup                                0x0000275d   Thumb Code    90  ece_spi.o(i.SPI_setup)
    SPI_xfer                                 0x000027c5   Thumb Code    28  ece_spi.o(i.SPI_xfer)
    SystemInit                               0x000027e5   Thumb Code   302  system_lpc17xx.o(i.SystemInit)
    UART0_IRQHandler                         0x00002925   Thumb Code    88  uart.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x0000298d   Thumb Code    90  uart.o(i.UART1_IRQHandler)
    UARTInit                                 0x000029fd   Thumb Code   176  uart.o(i.UARTInit)
    UARTSendChar                             0x00002ab9   Thumb Code    26  uart.o(i.UARTSendChar)
    __0printf                                0x00002add   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x00002add   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x00002add   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x00002add   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x00002add   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_fpclassifyf                        0x00002afd   Thumb Code    38  fpclassifyf.o(i.__ARM_fpclassifyf)
    __mathlib_flt_infnan                     0x00002b45   Thumb Code     6  funder.o(i.__mathlib_flt_infnan)
    __mathlib_flt_infnan2                    0x00002b4b   Thumb Code     4  funder.o(i.__mathlib_flt_infnan2)
    __mathlib_flt_invalid                    0x00002b4f   Thumb Code     8  funder.o(i.__mathlib_flt_invalid)
    __mathlib_flt_underflow                  0x00002b57   Thumb Code    10  funder.o(i.__mathlib_flt_underflow)
    __scatterload_copy                       0x00002b61   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002b6f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002b71   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __set_errno                              0x00002b81   Thumb Code     6  errno.o(i.__set_errno)
    asinf                                    0x00003441   Thumb Code   254  asinf.o(i.asinf)
    atan2f                                   0x00003565   Thumb Code   528  atan2f.o(i.atan2f)
    computeAngles                            0x000037c1   Thumb Code   244  sensor_fusion.o(i.computeAngles)
    fputc                                    0x000038d5   Thumb Code    14  retarget.o(i.fputc)
    getFrequency                             0x000038e5   Thumb Code    62  uart.o(i.getFrequency)
    invSqrt                                  0x0000392d   Thumb Code   108  sensor_fusion.o(i.invSqrt)
    main                                     0x0000399d   Thumb Code   348  p2main.o(i.main)
    osRtxErrorNotify                         0x00003b15   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x00003b35   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    print                                    0x00003b39   Thumb Code    84  p2main.o(i.print)
    sendchar                                 0x00003ba1   Thumb Code    64  retarget.o(i.sendchar)
    sensorFusionRead                         0x00003be5   Thumb Code    72  p2main.o(i.sensorFusionRead)
    sensor_fusion_begin                      0x00003c3d   Thumb Code    20  sensor_fusion.o(i.sensor_fusion_begin)
    sensor_fusion_getPitch                   0x00003c55   Thumb Code    24  sensor_fusion.o(i.sensor_fusion_getPitch)
    sensor_fusion_getRoll                    0x00003c79   Thumb Code    24  sensor_fusion.o(i.sensor_fusion_getRoll)
    sensor_fusion_getYaw                     0x00003c9d   Thumb Code    32  sensor_fusion.o(i.sensor_fusion_getYaw)
    sensor_fusion_init                       0x00003ccd   Thumb Code    62  sensor_fusion.o(i.sensor_fusion_init)
    sensor_fusion_update                     0x00003d39   Thumb Code  1842  sensor_fusion.o(i.sensor_fusion_update)
    sensor_fusion_updateIMU                  0x00004499   Thumb Code  1116  sensor_fusion.o(i.sensor_fusion_updateIMU)
    sqrtf                                    0x00004901   Thumb Code    44  sqrtf.o(i.sqrtf)
    Thread_Mutex_attr                        0x0000492c   Data          16  p2main.o(.constdata)
    irqRtxLibRef                             0x000049c0   Data           4  rtx_lib.o(.constdata)
    osRtxUserSVC                             0x000049c4   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x000049d8   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x00004a48   Data          56  rtx_lib.o(.rodata)
    irqRtxLib                                0x00004a80   Number         0  irq_armv7m.o(.rodata)
    Region$$Table$$Base                      0x00004a90   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004ab0   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x10002040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x10002074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x100020c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x1000214c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uart_init_called                         0x10002550   Data           1  retarget.o(.data)
    __stdout                                 0x10002554   Data           4  retarget.o(.data)
    __stdin                                  0x10002558   Data           4  retarget.o(.data)
    twoKp                                    0x1000255c   Data           4  sensor_fusion.o(.data)
    twoKi                                    0x10002560   Data           4  sensor_fusion.o(.data)
    q0                                       0x10002564   Data           4  sensor_fusion.o(.data)
    q1                                       0x10002568   Data           4  sensor_fusion.o(.data)
    q2                                       0x1000256c   Data           4  sensor_fusion.o(.data)
    q3                                       0x10002570   Data           4  sensor_fusion.o(.data)
    integralFBx                              0x10002574   Data           4  sensor_fusion.o(.data)
    integralFBy                              0x10002578   Data           4  sensor_fusion.o(.data)
    integralFBz                              0x1000257c   Data           4  sensor_fusion.o(.data)
    invSampleFreq                            0x10002580   Data           4  sensor_fusion.o(.data)
    roll                                     0x10002584   Data           4  sensor_fusion.o(.data)
    pitch                                    0x10002588   Data           4  sensor_fusion.o(.data)
    yaw                                      0x1000258c   Data           4  sensor_fusion.o(.data)
    anglesComputed                           0x10002590   Data           1  sensor_fusion.o(.data)
    ITM_RxBuffer                             0x10002594   Data           4  uart.o(.data)
    UART0Status                              0x10002598   Data           4  uart.o(.data)
    UART1Status                              0x1000259c   Data           4  uart.o(.data)
    UART0TxEmpty                             0x100025a0   Data           1  uart.o(.data)
    UART1TxEmpty                             0x100025a1   Data           1  uart.o(.data)
    UART0Count                               0x100025a4   Data           4  uart.o(.data)
    UART1Count                               0x100025a8   Data           4  uart.o(.data)
    RcvLock0                                 0x100025ac   Data           1  uart.o(.data)
    SndLock0                                 0x100025ad   Data           1  uart.o(.data)
    RcvLock1                                 0x100025ae   Data           1  uart.o(.data)
    SndLock1                                 0x100025af   Data           1  uart.o(.data)
    i                                        0x100025b0   Data           4  uart.o(.data)
    mutex1                                   0x100025b4   Data           4  p2main.o(.data)
    MPU9250_temperature                      0x100025b8   Data           4  mpu9250.o(.data)
    mag_data_raw                             0x100025bc   Data           6  mpu9250.o(.data)
    MPU9250_st_value                         0x100025c2   Data           1  mpu9250.o(.data)
    acc_divider                              0x100025c4   Data           4  mpu9250.o(.data)
    gyro_divider                             0x100025c8   Data           4  mpu9250.o(.data)
    SystemCoreClock                          0x100025cc   Data           4  system_lpc17xx.o(.data)
    osRtxInfo                                0x100025d4   Data         164  rtx_kernel.o(.data.os)
    UART0Buffer                              0x10002678   Data          64  uart.o(.bss)
    UART1Buffer                              0x100026b8   Data          64  uart.o(.bss)
    MPU9250_accel_data                       0x100026f8   Data          12  mpu9250.o(.bss)
    MPU9250_gyro_data                        0x10002704   Data          12  mpu9250.o(.bss)
    MPU9250_mag_data                         0x10002710   Data          12  mpu9250.o(.bss)
    calib_data                               0x1000271c   Data          12  mpu9250.o(.bss)
    Magnetometer_ASA                         0x10002728   Data          12  mpu9250.o(.bss)
    g_bias                                   0x10002734   Data          12  mpu9250.o(.bss)
    a_bias                                   0x10002740   Data          12  mpu9250.o(.bss)
    __initial_sp                             0x10004750   Data           0  startup_lpc17xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000e1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00007128, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004b14])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004ab0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000cc   Data   RO          714    RESET               startup_lpc17xx.o
    0x000000cc   0x000000cc   0x00000000   Code   RO         1252  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000000cc   0x000000cc   0x00000004   Code   RO         1562    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         1565    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         1567    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         1569    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000000d4   0x000000d4   0x00000008   Code   RO         1570    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000000dc   0x000000dc   0x00000000   Code   RO         1572    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000000dc   0x000000dc   0x00000000   Code   RO         1574    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000000dc   0x000000dc   0x00000004   Code   RO         1563    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000e0   0x000000e0   0x00000024   Code   RO          716  * .text               startup_lpc17xx.o
    0x00000104   0x00000104   0x00000094   Code   RO         1054    .text               RTX_CM3.lib(irq_armv7m.o)
    0x00000198   0x00000198   0x00000062   Code   RO         1255    .text               mc_w.l(uldiv.o)
    0x000001fa   0x000001fa   0x00000024   Code   RO         1257    .text               mc_w.l(memcpya.o)
    0x0000021e   0x0000021e   0x00000024   Code   RO         1259    .text               mc_w.l(memseta.o)
    0x00000242   0x00000242   0x000000b0   Code   RO         1524    .text               mf_w.l(fadd.o)
    0x000002f2   0x000002f2   0x0000000a   Code   RO         1536    .text               mf_w.l(ffltui.o)
    0x000002fc   0x000002fc   0x00000004   Code   RO          715    .ARM.__at_0x02FC    startup_lpc17xx.o
    0x00000300   0x00000300   0x00000064   Code   RO         1526    .text               mf_w.l(fmul.o)
    0x00000364   0x00000364   0x0000007c   Code   RO         1528    .text               mf_w.l(fdiv.o)
    0x000003e0   0x000003e0   0x0000014e   Code   RO         1530    .text               mf_w.l(dadd.o)
    0x0000052e   0x0000052e   0x000000de   Code   RO         1532    .text               mf_w.l(ddiv.o)
    0x0000060c   0x0000060c   0x00000012   Code   RO         1534    .text               mf_w.l(fflti.o)
    0x0000061e   0x0000061e   0x00000026   Code   RO         1538    .text               mf_w.l(f2d.o)
    0x00000644   0x00000644   0x00000014   Code   RO         1542    .text               mf_w.l(cfcmple.o)
    0x00000658   0x00000658   0x00000014   Code   RO         1544    .text               mf_w.l(cfrcmple.o)
    0x0000066c   0x0000066c   0x0000002c   Code   RO         1576    .text               mc_w.l(uidiv.o)
    0x00000698   0x00000698   0x0000001e   Code   RO         1578    .text               mc_w.l(llshl.o)
    0x000006b6   0x000006b6   0x00000020   Code   RO         1580    .text               mc_w.l(llushr.o)
    0x000006d6   0x000006d6   0x00000024   Code   RO         1582    .text               mc_w.l(llsshr.o)
    0x000006fa   0x000006fa   0x00000000   Code   RO         1591    .text               mc_w.l(iusefp.o)
    0x000006fa   0x000006fa   0x0000006e   Code   RO         1592    .text               mf_w.l(fepilogue.o)
    0x00000768   0x00000768   0x00000018   Code   RO         1594    .text               mf_w.l(fscalb.o)
    0x00000780   0x00000780   0x0000005e   Code   RO         1596    .text               mf_w.l(fsqrt.o)
    0x000007de   0x000007de   0x000000ba   Code   RO         1598    .text               mf_w.l(depilogue.o)
    0x00000898   0x00000898   0x000000e4   Code   RO         1600    .text               mf_w.l(dmul.o)
    0x0000097c   0x0000097c   0x00000030   Code   RO         1602    .text               mf_w.l(dfixul.o)
    0x000009ac   0x000009ac   0x00000030   Code   RO         1604    .text               mf_w.l(cdrcmple.o)
    0x000009dc   0x000009dc   0x00000024   Code   RO         1606    .text               mc_w.l(init.o)
    0x00000a00   0x00000a00   0x0000003a   Code   RO         1616    .text               mc_w.l(__dczerorl.o)
    0x00000a3a   0x00000a3a   0x00000040   Code   RO         1170    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000a7a   0x00000a7a   0x00000058   Code   RO         1164    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000ad2   0x00000ad2   0x0000001c   Code   RO         1162    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000aee   0x00000aee   0x00000002   PAD
    0x00000af0   0x00000af0   0x0000000c   Code   RO         1208    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x00000afc   0x00000afc   0x0000002c   Code   RO         1204    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x00000b28   0x00000b28   0x00000006   Code   RO         1210    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x00000b2e   0x00000b2e   0x00000002   PAD
    0x00000b30   0x00000b30   0x00000040   Code   RO         1202    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x00000b70   0x00000b70   0x0000000c   Code   RO          817    .text.OUTLINED_FUNCTION_0  RTX_CM3.lib(rtx_kernel.o)
    0x00000b7c   0x00000b7c   0x0000000c   Code   RO         1178    .text.OUTLINED_FUNCTION_0  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000b88   0x00000b88   0x00000006   Code   RO          819    .text.OUTLINED_FUNCTION_1  RTX_CM3.lib(rtx_kernel.o)
    0x00000b8e   0x00000b8e   0x00000064   Code   RO          911    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x00000bf2   0x00000bf2   0x00000002   PAD
    0x00000bf4   0x00000bf4   0x00000048   Code   RO          995    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x00000c3c   0x00000c3c   0x0000002c   Code   RO          763    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00000c68   0x00000c68   0x00000024   Code   RO          773    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x00000c8c   0x00000c8c   0x00000070   Code   RO         1138    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000cfc   0x00000cfc   0x00000080   Code   RO         1136    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000d7c   0x00000d7c   0x00000024   Code   RO         1027    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00000da0   0x00000da0   0x00000024   Code   RO         1023    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x00000dc4   0x00000dc4   0x00000024   Code   RO         1029    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000de8   0x00000de8   0x00000004   Code   RO          761    .text.osRtxKernelErrorNotify  RTX_CM3.lib(rtx_kernel.o)
    0x00000dec   0x00000dec   0x00000002   Code   RO          759    .text.osRtxKernelPreInit  RTX_CM3.lib(rtx_kernel.o)
    0x00000dee   0x00000dee   0x0000006c   Code   RO         1064    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x00000e5a   0x00000e5a   0x00000042   Code   RO         1066    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x00000e9c   0x00000e9c   0x00000036   Code   RO         1062    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x00000ed2   0x00000ed2   0x0000003a   Code   RO         1078    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x00000f0c   0x00000f0c   0x0000004a   Code   RO         1080    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x00000f56   0x00000f56   0x00000038   Code   RO         1076    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x00000f8e   0x00000f8e   0x000000aa   Code   RO         1160    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001038   0x00001038   0x00000028   Code   RO         1128    .text.osRtxMessageQueueTimerSetup  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001060   0x00001060   0x00000048   Code   RO         1019    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x000010a8   0x000010a8   0x00000042   Code   RO         1021    .text.osRtxMutexOwnerRestore  RTX_CM3.lib(rtx_mutex.o)
    0x000010ea   0x000010ea   0x00000002   PAD
    0x000010ec   0x000010ec   0x0000008c   Code   RO         1190    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x00001178   0x00001178   0x00000074   Code   RO         1192    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x000011ec   0x000011ec   0x00000038   Code   RO          851    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x00001224   0x00001224   0x00000080   Code   RO          859    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x000012a4   0x000012a4   0x00000040   Code   RO          855    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x000012e4   0x000012e4   0x0000004c   Code   RO          841    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x00001330   0x00001330   0x00000024   Code   RO          943    .text.osRtxThreadDestroy  RTX_CM3.lib(rtx_thread.o)
    0x00001354   0x00001354   0x00000054   Code   RO          849    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x000013a8   0x000013a8   0x00000058   Code   RO          935    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x00001400   0x00001400   0x0000001e   Code   RO          941    .text.osRtxThreadJoinWakeup  RTX_CM3.lib(rtx_thread.o)
    0x0000141e   0x0000141e   0x00000012   Code   RO          833    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x00001430   0x00001430   0x0000002c   Code   RO          831    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x0000145c   0x0000145c   0x00000014   Code   RO          837    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x00001470   0x00001470   0x0000000c   Code   RO          843    .text.osRtxThreadListRoot  RTX_CM3.lib(rtx_thread.o)
    0x0000147c   0x0000147c   0x00000026   Code   RO          835    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x000014a2   0x000014a2   0x00000028   Code   RO          909    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x000014ca   0x000014ca   0x00000002   PAD
    0x000014cc   0x000014cc   0x00000014   Code   RO          839    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x000014e0   0x000014e0   0x00000006   Code   RO          845    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x000014e6   0x000014e6   0x00000002   PAD
    0x000014e8   0x000014e8   0x0000003c   Code   RO          861    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x00001524   0x00001524   0x00000010   Code   RO          847    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x00001534   0x00001534   0x0000003c   Code   RO          857    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x00001570   0x00001570   0x00000022   Code   RO          853    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x00001592   0x00001592   0x00000002   PAD
    0x00001594   0x00001594   0x00000078   Code   RO         1188    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x0000160c   0x0000160c   0x00000020   Code   RO          977    .text.osRtxTimerSetup  RTX_CM3.lib(rtx_timer.o)
    0x0000162c   0x0000162c   0x00000020   Code   RO          981    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x0000164c   0x0000164c   0x00000070   Code   RO          979    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x000016bc   0x000016bc   0x0000000c   Code   RO          893    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x000016c8   0x000016c8   0x00000024   Code   RO          865    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x000016ec   0x000016ec   0x00000100   Code   RO          801    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x000017ec   0x000017ec   0x00000088   Code   RO          803    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x00001874   0x00001874   0x000000d8   Code   RO         1172    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x0000194c   0x0000194c   0x00000118   Code   RO         1130    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001a64   0x00001a64   0x000000b4   Code   RO         1168    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001b18   0x00001b18   0x00000090   Code   RO         1039    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00001ba8   0x00001ba8   0x00000068   Code   RO         1035    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x00001c10   0x00001c10   0x000000b4   Code   RO         1041    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00001cc4   0x00001cc4   0x0000004c   Code   RO          939    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x00001d10   0x00001d10   0x000001ec   Code   RO          863    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x00001efc   0x00001efc   0x00000014   Code   RO          442    i.DelayMilliseconds  mpu9250.o
    0x00001f10   0x00001f10   0x00000010   Code   RO          443    i.DelayOneMillisecond  mpu9250.o
    0x00001f20   0x00001f20   0x00000006   Code   RO          263    i.Free              uart.o
    0x00001f26   0x00001f26   0x00000002   PAD
    0x00001f28   0x00001f28   0x00000024   Code   RO          264    i.FreeRcv           uart.o
    0x00001f4c   0x00001f4c   0x00000024   Code   RO          265    i.FreeSnd           uart.o
    0x00001f70   0x00001f70   0x00000038   Code   RO          377    i.IMU               p2main.o
    0x00001fa8   0x00001fa8   0x00000032   Code   RO          446    i.MPU9250_ReadRegs  mpu9250.o
    0x00001fda   0x00001fda   0x00000020   Code   RO          447    i.MPU9250_WriteReg  mpu9250.o
    0x00001ffa   0x00001ffa   0x0000045a   Code   RO          450    i.MPU9250_calibrate  mpu9250.o
    0x00002454   0x00002454   0x0000007c   Code   RO          452    i.MPU9250_init      mpu9250.o
    0x000024d0   0x000024d0   0x00000064   Code   RO          453    i.MPU9250_read_acc  mpu9250.o
    0x00002534   0x00002534   0x00000064   Code   RO          455    i.MPU9250_read_gyro  mpu9250.o
    0x00002598   0x00002598   0x00000090   Code   RO          456    i.MPU9250_read_mag  mpu9250.o
    0x00002628   0x00002628   0x0000007c   Code   RO          458    i.MPU9250_set_acc_scale  mpu9250.o
    0x000026a4   0x000026a4   0x00000088   Code   RO          459    i.MPU9250_set_gyro_scale  mpu9250.o
    0x0000272c   0x0000272c   0x00000010   Code   RO          460    i.MPU9250_whoami    mpu9250.o
    0x0000273c   0x0000273c   0x00000010   Code   RO          573    i.SPI_deselect      ece_spi.o
    0x0000274c   0x0000274c   0x00000010   Code   RO          576    i.SPI_select        ece_spi.o
    0x0000275c   0x0000275c   0x00000068   Code   RO          577    i.SPI_setup         ece_spi.o
    0x000027c4   0x000027c4   0x00000020   Code   RO          579    i.SPI_xfer          ece_spi.o
    0x000027e4   0x000027e4   0x00000140   Code   RO          726    i.SystemInit        system_lpc17xx.o
    0x00002924   0x00002924   0x00000068   Code   RO          269    i.UART0_IRQHandler  uart.o
    0x0000298c   0x0000298c   0x00000070   Code   RO          270    i.UART1_IRQHandler  uart.o
    0x000029fc   0x000029fc   0x000000bc   Code   RO          271    i.UARTInit          uart.o
    0x00002ab8   0x00002ab8   0x00000024   Code   RO          275    i.UARTSendChar      uart.o
    0x00002adc   0x00002adc   0x00000020   Code   RO         1496    i.__0printf         mc_w.l(printfa.o)
    0x00002afc   0x00002afc   0x00000026   Code   RO         1546    i.__ARM_fpclassifyf  m_ws.l(fpclassifyf.o)
    0x00002b22   0x00002b22   0x00000022   Code   RO          276    i.__NVIC_EnableIRQ  uart.o
    0x00002b44   0x00002b44   0x00000006   Code   RO         1549    i.__mathlib_flt_infnan  m_ws.l(funder.o)
    0x00002b4a   0x00002b4a   0x00000004   Code   RO         1550    i.__mathlib_flt_infnan2  m_ws.l(funder.o)
    0x00002b4e   0x00002b4e   0x00000008   Code   RO         1551    i.__mathlib_flt_invalid  m_ws.l(funder.o)
    0x00002b56   0x00002b56   0x0000000a   Code   RO         1554    i.__mathlib_flt_underflow  m_ws.l(funder.o)
    0x00002b60   0x00002b60   0x0000000e   Code   RO         1610    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00002b6e   0x00002b6e   0x00000002   Code   RO         1611    i.__scatterload_null  mc_w.l(handlers.o)
    0x00002b70   0x00002b70   0x0000000e   Code   RO         1612    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00002b7e   0x00002b7e   0x00000002   PAD
    0x00002b80   0x00002b80   0x0000000c   Code   RO         1586    i.__set_errno       mc_w.l(errno.o)
    0x00002b8c   0x00002b8c   0x00000184   Code   RO         1503    i._fp_digits        mc_w.l(printfa.o)
    0x00002d10   0x00002d10   0x000006dc   Code   RO         1504    i._printf_core      mc_w.l(printfa.o)
    0x000033ec   0x000033ec   0x00000024   Code   RO         1505    i._printf_post_padding  mc_w.l(printfa.o)
    0x00003410   0x00003410   0x0000002e   Code   RO         1506    i._printf_pre_padding  mc_w.l(printfa.o)
    0x0000343e   0x0000343e   0x00000002   PAD
    0x00003440   0x00003440   0x00000124   Code   RO         1229    i.asinf             m_ws.l(asinf.o)
    0x00003564   0x00003564   0x0000025c   Code   RO         1237    i.atan2f            m_ws.l(atan2f.o)
    0x000037c0   0x000037c0   0x00000114   Code   RO          139    i.computeAngles     sensor_fusion.o
    0x000038d4   0x000038d4   0x0000000e   Code   RO           79    i.fputc             retarget.o
    0x000038e2   0x000038e2   0x00000002   PAD
    0x000038e4   0x000038e4   0x00000048   Code   RO          277    i.getFrequency      uart.o
    0x0000392c   0x0000392c   0x00000070   Code   RO          140    i.invSqrt           sensor_fusion.o
    0x0000399c   0x0000399c   0x00000178   Code   RO          378    i.main              p2main.o
    0x00003b14   0x00003b14   0x00000020   Code   RO          681    i.osRtxErrorNotify  rtx_config.o
    0x00003b34   0x00003b34   0x00000004   Code   RO          682    i.osRtxIdleThread   rtx_config.o
    0x00003b38   0x00003b38   0x00000068   Code   RO          379    i.print             p2main.o
    0x00003ba0   0x00003ba0   0x00000044   Code   RO           81    i.sendchar          retarget.o
    0x00003be4   0x00003be4   0x00000058   Code   RO          380    i.sensorFusionRead  p2main.o
    0x00003c3c   0x00003c3c   0x00000018   Code   RO          141    i.sensor_fusion_begin  sensor_fusion.o
    0x00003c54   0x00003c54   0x00000024   Code   RO          142    i.sensor_fusion_getPitch  sensor_fusion.o
    0x00003c78   0x00003c78   0x00000024   Code   RO          144    i.sensor_fusion_getRoll  sensor_fusion.o
    0x00003c9c   0x00003c9c   0x00000030   Code   RO          146    i.sensor_fusion_getYaw  sensor_fusion.o
    0x00003ccc   0x00003ccc   0x0000006c   Code   RO          148    i.sensor_fusion_init  sensor_fusion.o
    0x00003d38   0x00003d38   0x00000760   Code   RO          149    i.sensor_fusion_update  sensor_fusion.o
    0x00004498   0x00004498   0x00000468   Code   RO          150    i.sensor_fusion_updateIMU  sensor_fusion.o
    0x00004900   0x00004900   0x0000002c   Code   RO         1245    i.sqrtf             m_ws.l(sqrtf.o)
    0x0000492c   0x0000492c   0x00000010   Data   RO          381    .constdata          p2main.o
    0x0000493c   0x0000493c   0x00000022   Data   RO          462    .constdata          mpu9250.o
    0x0000495e   0x0000495e   0x00000002   PAD
    0x00004960   0x00004960   0x00000068   Data   RO          639    .constdata          rtx_lib.o
    0x000049c8   0x000049c8   0x0000000e   Data   RO          382    .conststring        p2main.o
    0x000049d6   0x000049d6   0x00000002   PAD
    0x000049d8   0x000049d8   0x000000a8   Data   RO          640    .rodata             rtx_lib.o
    0x00004a80   0x00004a80   0x00000001   Data   RO         1055    .rodata             RTX_CM3.lib(irq_armv7m.o)
    0x00004a81   0x00004a81   0x00000003   PAD
    0x00004a84   0x00004a84   0x0000000b   Data   RO          821    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x00004a8f   0x00004a8f   0x00000001   PAD
    0x00004a90   0x00004a90   0x00000020   Data   RO         1608    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x10000000, Load base: 0x00004ab0, Size: 0x00002678, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000064])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   COMPRESSED   0x00002040   Data   RW          633    .bss.os             rtx_lib.o
    0x10002040   COMPRESSED   0x00000034   Data   RW          634    .bss.os.msgqueue.cb  rtx_lib.o
    0x10002074   COMPRESSED   0x00000050   Data   RW          635    .bss.os.msgqueue.mem  rtx_lib.o
    0x100020c4   COMPRESSED   0x00000088   Data   RW          636    .bss.os.thread.cb   rtx_lib.o
    0x1000214c   COMPRESSED   0x00000004   PAD
    0x10002150   COMPRESSED   0x00000200   Data   RW          637    .bss.os.thread.idle.stack  rtx_lib.o
    0x10002350   COMPRESSED   0x00000200   Data   RW          638    .bss.os.thread.timer.stack  rtx_lib.o
    0x10002550   COMPRESSED   0x0000000c   Data   RW           82    .data               retarget.o
    0x1000255c   COMPRESSED   0x00000035   Data   RW          151    .data               sensor_fusion.o
    0x10002591   COMPRESSED   0x00000003   PAD
    0x10002594   COMPRESSED   0x00000020   Data   RW          279    .data               uart.o
    0x100025b4   COMPRESSED   0x00000004   Data   RW          383    .data               p2main.o
    0x100025b8   COMPRESSED   0x00000014   Data   RW          463    .data               mpu9250.o
    0x100025cc   COMPRESSED   0x00000004   Data   RW          727    .data               system_lpc17xx.o
    0x100025d0   COMPRESSED   0x00000004   Data   RW         1587    .data               mc_w.l(errno.o)
    0x100025d4   COMPRESSED   0x000000a4   Data   RW          822    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x10002678, Load base: 0x00004b14, Size: 0x000020d8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10002678        -       0x00000080   Zero   RW          278    .bss                uart.o
    0x100026f8        -       0x00000054   Zero   RW          461    .bss                mpu9250.o
    0x1000274c        -       0x00000001   Zero   RW         1220    .bss.os             RTX_CM3.lib(os_systick.o)
    0x1000274d   0x00004b14   0x00000003   PAD
    0x10002750        -       0x00002000   Zero   RW          712    STACK               startup_lpc17xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       168         30          0          0          0       1815   ece_spi.o
         0          0          0          0          0      21424   led.o
      1976         82         34         20         84       9286   mpu9250.o
       624         74         30          4          0       6455   p2main.o
        82          4          0         12          0       2950   retarget.o
        36          6          0          0          0       1005   rtx_config.o
         0          0        272       9548          0       9058   rtx_lib.o
      3656        248          0         53          0       7764   sensor_fusion.o
        40         12        204          0       8192       1044   startup_lpc17xx.o
       320         18          0          4          0        859   system_lpc17xx.o
         0          0          0          0          0        484   timer.o
       624         86          0         32        128       5959   uart.o

    ----------------------------------------------------------------------
      7530        560        576       9680       8404      68103   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          4          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148          8          1          0          0        591   irq_armv7m.o
       126         32          0          0          1       3197   os_systick.o
       496         36         11        164          0      16501   rtx_kernel.o
       228          0          0          0          0       2537   rtx_memory.o
       188          0          0          0          0      16008   rtx_mempool.o
      1318         32          0          0          0      18657   rtx_msgqueue.o
       674         24          0          0          0       9962   rtx_mutex.o
       376         26          0          0          0       5296   rtx_system.o
      1646         84          0          0          0      31735   rtx_thread.o
       248         16          0          0          0      10397   rtx_timer.o
       292         38          0          0          0        120   asinf.o
       604         76          0          0          0        116   atan2f.o
        38          0          0          0          0         68   fpclassifyf.o
        28          0          0          0          0        272   funder.o
        44          0          0          0          0         80   sqrtf.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        12          6          0          4          0         68   errno.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
      2258         90          0          0          0        452   printfa.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
        20          0          0          0          0         68   cfcmple.o
        20          0          0          0          0         68   cfrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       176          0          0          0          0        140   fadd.o
       124          0          0          0          0         88   fdiv.o
       110          0          0          0          0        168   fepilogue.o
        18          0          0          0          0         68   fflti.o
        10          0          0          0          0         68   ffltui.o
       100          0          0          0          0         76   fmul.o
        24          0          0          0          0         68   fscalb.o
        94          0          0          0          0         96   fsqrt.o

    ----------------------------------------------------------------------
     10998        484         16        168          4     118309   Library Totals
        18          0          4          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5448        258         12        164          1     114881   RTX_CM3.lib
      1006        114          0          0          0        656   m_ws.l
      2726        112          0          4          0       1140   mc_w.l
      1800          0          0          0          0       1632   mf_w.l

    ----------------------------------------------------------------------
     10998        484         16        168          4     118309   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     18528       1044        592       9848       8408     182512   Grand Totals
     18528       1044        592        100       8408     182512   ELF Image Totals (compressed)
     18528       1044        592        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19120 (  18.67kB)
    Total RW  Size (RW Data + ZI Data)             18256 (  17.83kB)
    Total ROM Size (Code + RO Data + RW Data)      19220 (  18.77kB)

==============================================================================

